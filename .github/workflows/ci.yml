name: CI

on:
  name: CI

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DEBUG: 'False'
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Generate temporary SECRET_KEY for PRs
        if: github.event_name == 'pull_request'
        run: |
          echo "Generating temporary SECRET_KEY for PR run"
          python - <<'PY' >> $GITHUB_ENV
from django.core.management.utils import get_random_secret_key
print('SECRET_KEY=' + get_random_secret_key())
PY

      - name: Fail early if SECRET_KEY missing
        if: github.event_name != 'pull_request'
        run: |
          if [ -z "${SECRET_KEY}" ]; then
            echo "ERROR: SECRET_KEY is not set. Add it to repository Secrets as SECRET_KEY.";
            exit 1;
          fi

      - name: Debug: print non-secret env indicators
        run: |
          echo "DEBUG=${DEBUG}"
          if [ -z "${SECRET_KEY}" ]; then
            echo "SECRET_KEY is not set"
          else
            echo "SECRET_KEY is set (value withheld)"
          fi
          if [ -z "${DATABASE_URL}" ]; then
            echo "DATABASE_URL is not set"
          else
            echo "DATABASE_URL is set (value withheld)"
          fi

      - name: Run migrations
        run: python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test --verbosity=2
